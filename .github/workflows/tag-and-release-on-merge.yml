name: Tag and create release on merge

on:
  push:
    branches:
      - main

jobs:
  tag_and_release:
    if: github.event.head_commit.message != ''
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch full history for tags and logs

      - name: Detect release version from merge commit
        id: extract_version
        run: |
          echo "Commit message: ${{ github.event.head_commit.message }}"

          # Attempt to extract 'release/x.y.z' from merge commit message
          MATCH=$(echo "${{ github.event.head_commit.message }}" | grep -oE 'release/[0-9]+\.[0-9]+\.[0-9]+')

          if [[ -z "$MATCH" ]]; then
            echo "No release branch found in merge message. Skipping."
            echo "continue=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          VERSION=$(echo "$MATCH" | cut -d'/' -f2)
          echo "Found version: $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "continue=true" >> "$GITHUB_OUTPUT"

      - name: Create Git tag
        if: steps.extract_version.outputs.continue == 'true'
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}

          if git rev-parse "refs/tags/$VERSION" >/dev/null 2>&1; then
            echo "❌ Tag $VERSION already exists. Skipping tag creation."
            exit 1
          fi

          git tag "$VERSION"
          git push origin "$VERSION"

      - name: Read changelog.txt
        if: steps.extract_version.outputs.continue == 'true'
        id: changelog
        run: |
          if [[ ! -f changelog.txt ]]; then
            echo "❌ changelog.txt not found. Aborting."
            exit 1
          fi
          echo "Reading changelog.txt..."
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        if: steps.extract_version.outputs.continue == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: "Release ${{ steps.extract_version.outputs.version }}"
          body: ${{ steps.changelog.outputs.body }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
